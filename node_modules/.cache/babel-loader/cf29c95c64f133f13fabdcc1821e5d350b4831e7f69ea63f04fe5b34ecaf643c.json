{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikib\\\\Desktop\\\\tanfolyam\\\\React\\\\week5\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  let city = props.city;\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.city]);\n  function handleResponse(response) {\n    console.log(apiUrl);\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  function load() {\n    const apiKey = \"169593726e1aec07dad44a28f5ddeea4\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n_c = WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherForecastDay","jsxDEV","_jsxDEV","WeatherForecast","props","_s","loaded","setLoaded","forecast","setForecast","city","handleResponse","response","console","log","apiUrl","data","daily","load","apiKey","get","then","className","children","map","dailyForecast","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nikib/Desktop/tanfolyam/React/week5/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./WeatherForecast.css\";\r\nimport axios from \"axios\";\r\nimport WeatherForecastDay from \"./WeatherForecastDay\";\r\n\r\nexport default function WeatherForecast(props) {\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [forecast, setForecast] = useState(null);\r\n  let city = props.city\r\n  useEffect(() => {\r\n    setLoaded(false);\r\n  }, [props.city]);\r\n\r\n  function handleResponse(response) {\r\n    console.log(apiUrl)\r\n    setForecast(response.data.daily);\r\n    setLoaded(true);\r\n  }\r\n\r\n  function load() {\r\n    const apiKey = \"169593726e1aec07dad44a28f5ddeea4\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n  }\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div className=\"WeatherForecast\">\r\n        <div className=\"row\">\r\n          {forecast.map(function (dailyForecast, index) {\r\n            if (index < 5) {\r\n              return (\r\n                <div className=\"col\" key={index}>\r\n                  <WeatherForecastDay data={dailyForecast} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    load();\r\n\r\n    return null;\r\n  }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,IAAIa,IAAI,GAAGN,KAAK,CAACM,IAAI;EACrBZ,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC,EAAE,CAACH,KAAK,CAACM,IAAI,CAAC,CAAC;EAEhB,SAASC,cAAcA,CAACC,QAAQ,EAAE;IAChCC,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACnBN,WAAW,CAACG,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAChCV,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,SAASW,IAAIA,CAAA,EAAG;IACd,MAAMC,MAAM,GAAG,kCAAkC;IACjD,IAAIJ,MAAM,GAAG,qDAAqDL,IAAI,UAAUS,MAAM,eAAe;IACrGpB,KAAK,CAACqB,GAAG,CAACL,MAAM,CAAC,CAACM,IAAI,CAACV,cAAc,CAAC;EACxC;EAEA,IAAIL,MAAM,EAAE;IACV,oBACEJ,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BrB,OAAA;QAAKoB,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBf,QAAQ,CAACgB,GAAG,CAAC,UAAUC,aAAa,EAAEC,KAAK,EAAE;UAC5C,IAAIA,KAAK,GAAG,CAAC,EAAE;YACb,oBACExB,OAAA;cAAKoB,SAAS,EAAC,KAAK;cAAAC,QAAA,eAClBrB,OAAA,CAACF,kBAAkB;gBAACgB,IAAI,EAAES;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADnBJ,KAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAAC;UAEV,CAAC,MAAM;YACL,OAAO,IAAI;UACb;QACF,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM;IACLZ,IAAI,CAAC,CAAC;IAEN,OAAO,IAAI;EACb;AACF;AAACb,EAAA,CA3CuBF,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}